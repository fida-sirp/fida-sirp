import React, { useEffect, useState } from 'react';
import * as Yup from 'yup';
import { Formik, Form, Field } from 'formik';
import { Row, Col } from 'antd';
import SPButton from '../../../../../../components/SPButton';
import 'antd/dist/antd.css';
import InputBox from '../../../../../../components/InputBox';

function NonTechnicalFormDrawer({
    isOpen,
    submit,
    record,
    closeDrawer,
    isCreate
}) {
    const formInitialValues = {
        vls_name: record?.vls_name || '',
        vls_value: record?.vls_value || ""
    }
    let validationSchemaStandard = Yup.object({
        vls_name: Yup.string().required("This Field is Required")
    });
    return (
        <div>
            <Formik
                id="formik"
                validationSchema={validationSchemaStandard}
                initialValues={formInitialValues}
                enableReinitialize
                onSubmit={(values, { resetForm }) => {
                    submit(values);
                    resetForm();
                }}
            >
                {({
                    values,
                    errors,
                    touched,
                    handleChange,
                    handleBlur,
                    handleSubmit,
                    isSubmitting,
                    resetForm,
                    setFieldValue,
                }) => {
                    useEffect(() => {
                        resetForm()
                    }, [isOpen])
                    return (
                        <Form>
                            <InputBox
                                id={'vls_name'}
                                label={'Name'}
                                name={'vls_name'}
                                placeholder={'Name'}
                                onInputChange={handleChange}
                                onBlur={handleBlur}
                                errorMessage={errors.vls_name}
                                value={values.vls_name}
                                touched={touched.vls_name}
                                noBorderValidation
                            />
                            <InputBox
                                id="vls_value"
                                label="Value"
                                name="vls_value"
                                type="number"
                                placeholder="value"
                                onInputChange={handleChange}
                                onBlur={handleBlur}
                                errorMessage={errors.vls_value}
                                value={values.vls_value}
                                touched={touched.vls_value}
                            />
                            <Row gutter={11} justify="end" >
                                <Col>
                                    <SPButton
                                        title="Cancel"
                                        size="small"
                                        type="secondary"
                                        onButtonClick={() => {
                                            resetForm();
                                            closeDrawer();
                                        }}
                                    />
                                </Col>
                                <Col>
                                    <SPButton
                                        title={isCreate ? "Save" : "Update"}
                                        size="small"
                                        type="submit"
                                        onButtonClick={handleSubmit}
                                        isLoading={false}
                                    />
                                </Col>
                            </Row>
                        </Form>
                    )
                }}
            </Formik>
        </div>
    );
}

export default NonTechnicalFormDrawer;
